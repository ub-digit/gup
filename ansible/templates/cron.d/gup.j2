# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command

0   5,17  *   *   *     {{ docker_directory_path }}/cron_solr_full_index >> {{ docker_directory_path }}/solr_full_index.log
5   *     *   *   *     {{ docker_directory_path }}/cron_publication_create_lists &> /dev/null
0   *     *   *   *     {{ docker_directory_path }}/cron_publication_create_sitemaps &> /dev/null
00  22    *   *   *     (cd {{ docker_directory_path }} ; {{ docker_command }} exec backend bundle exec rake gup_admin:sync_updated_publications DAYS=1 >> /var/tmp/gup-sync-updated.log)
10  22    *   *   *     (cd {{ docker_directory_path }} ; {{ docker_command }} exec backend bundle exec rake gup_admin:sync_deleted_publications DAYS=1 >> /var/tmp/gup-sync-deleted.log)
10  6     1   *   *     (cd {{ docker_directory_path }} ; {{ docker_command }} exec backend rake people:create_list_of_researchers &> /dev/null)
